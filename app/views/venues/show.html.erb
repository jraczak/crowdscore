<!-- MERP -->

<% provide(:title, " | #{resource.name.titlecase}") %>
<script>
// set JS variables for controls to be made available for gmaps4rails JS files
var disable_default_ui = true;
var page_zoom_level = 14;
var auto_adjust = false;
var auto_zoom = false;
</script>

  <div class="top-block"></div>
  <div class="gray-bar"></div>

  <div class="container">

  	<!-- Start of left rail -->
  	<div class="left-rail-container">

			<!-- Overall score container-->
		  <div class="overall-score-container">
			  <div class="header">OVERALL SCORE</div>
			  <div class="inner-body">
					<canvas id="overallScoreCanvas" width="173" height="173"></canvas>
			  	
			  	<div class="center-absolute">
				  	<p>
				  	<% unless resource.venue_scores.empty? %>
				  		based on <%= pluralize(resource.venue_scores.count, "score") %>
				  	<% end %>
				  	</p>
				  </div>

			  	<div class="center-absolute">
				  	<div class="overallScorePercentage <% if resource.score.class == String %>no-score<% end %>">
				  		<%= score = resource.score %>
				  	</div>
				  </div>

				  <div class="center-absolute">
						<div id="submit-score-btn" class="submit-score-btn">SUBMIT YOUR SCORE</div>
					</div>

				</div>
		  </div><!-- end overall score container -->


		 	<!-- Image container -->
			<% if resource.venue_images.any? %>
			<div class="venue-image present" style="background-image: url('<%= resource.venue_images.first.image_file %>')">
				<%= image_tag('photo_zoom.png') %></img>
			  <div class="add-element-triangle"></div>
			  <div class="add-element-text"><a onclick="openImageUploader()">+</a></div>
			<% else %>
			<div class="venue-image">
				<div class="center-absolute">
			  	<div class='empty-camera'>
			  	</div>

			  	<div class="add-msg">
			  		Be the first to add a photo!
			  	</div>
			  </div>
			  <%= image_tag('photo_zoom.png') %></img>
			  <div class="add-element-triangle"></div>
			  <div class="add-element-text"><a onclick="openImageUploader()">+</a></div>
			<% end %>

			</div><!-- End Container -->


		 	<!-- Tags container -->
			<div class="<%= resource.tags.any? ? 'tags-container' : 'tags-container gray-line-pattern'%>">
				
				<div class="header">
					<h4>TAGS</h4>
				</div>
				
				<% if resource.tags.any? %>
				  <% resource.tags.each do |t| %>
				    <a class="tag-btn" href="#"><%= t.name.upcase %></a>
				  <% end %>
				
				  <a class="see-all-tags" href="#">
                    <h4>SEE ALL TAGS</h4>
				  </a>

		      <% else %>
		      
			  	<div class="center-absolute">
				  	<div class="add-msg">
				  		<p>No tags here yet.<br>
				  		Share what you know and add some!</p>
				  	</div>
				  </div>

		    <% end %>

			  <div class="add-element-triangle"></div>
			  <div class="add-element-text"><a href="#">+</a></div>

			</div>
			
			

			<!-- End tags container -->
  	</div><!-- End of left rail -->


  	<!-- Start of right rail -->
  	<div class="right-rail-container">
  		<div class="right-rail-header">
	  		<div class="venue-title"><%= resource.name.titlecase %></div>

				<!-- Grey bar section -->
				<div class="venue-sub-header">
					<div class="inner-body">
						<span class="venue-type">
							<p><%= resource.venue_category.name %></p>
						</span>
						<span class="venue-hours">
							<p class="hours">12:30AM - 11:30PM</p>
							<div class="operation-status-open">OPEN</div>
						</span>
						<span class="share-venue">	  			
							<a href="#">
								<p>
									<%= image_tag('share_venue.png') %>SHARE
								</p>
							</a>
						</span>	
						<span class="add-venue-to-list">
							<a href="#">
								<p>
									<%= image_tag('add_to_list.png') %>ADD TO LIST
								</p>
							</a>
						</span>
					</div>
				</div> <!-- End grey bar section -->


				<!-- Venue details section (with google map) -->
				<div class="venue-details">
					<div class="map-container">
						<div id="map_canvas" class="map" style="">
							<%= gmaps4rails(@json) %>
						</div>
						<!--<div id="map_canvas" class="map" style="background-image: url(https://www.google.com/maps/vt/data=Ay5GWBeob_WIPLDYoIWcfVXxvZu9XwJ55OX7Ag,vhh4At2l71MGYYtVxfBqIC_CRGSZyg-GRrwtqNhZJ-t4HcGuMeZueJA5IiX3T1FONpIFj1Swu0W30z3xZ49FfJrLe_As5c6T4I3M_LGx);"></div> -->
					</div>
					<div class="body">
						<div class="address-contact-container">
							<div class="center-text">
								<div class="address">
									<%= "#{resource.address1} #{resource.address2}" %></br>
									<%= "#{resource.city}, #{resource.state} #{resource.zip}" %></br>
									<%= link_to "get directions", "http://maps.google.com/maps?saddr=&daddr=#{resource.full_address}", target: "_new" %>
								</div>
								<div class="contact">
									<% if resource.phone.present? %>
									  <%= number_to_phone(resource.phone, area_code: true) %></br>
									<% else %>
									  <%= link_to "add the phone number", edit_venue_path %></br>
									<% end %>
									
									<% if resource.url.present? && resource.url != "http://" %>
									  <%= link_to "visit the webiste", resource.url %>
									<% else %>
									  <%= link_to "add the website", edit_venue_path %>
									<% end %>
								</div>
							</div>
						</div>
						<div class="venue-traits-container">
							<div class="center-text">
								<div class="venue-traits">
									<li href="#">
										<% if resource.venue_subcategory.blank? %>
										  <%= link_to "add subcategory", edit_venue_path(resource) %>
										<% else %>
										  <img src="./assets/images/platter.png" alt=""><%= resource.venue_subcategory.name %>
										<% end %>
									</li>
									<% if resource.tags.include?("credit cards") %>
									  <li href="#" style="padding-left: 1px;">
										<img src="./assets/images/credit-card.png" alt="">Accepts credit cards
									  </li>
									<% end %>
									<% if resource.tags.include?("reservations") %>
									  <li href="#" style="padding-left: 1px;">
										<img src="./assets/images/calendar.png" alt="">Takes reservations
									  </li>
									<% end %>
								</div>
							</div>
						</div>
					</div>
				</div><!-- end of venue details section -->


				<!-- Venue score section with graphs -->
				<div class="venue-scores">
					<span>
						<div class="left-offset">
							<canvas id="graph<%= resource.venue_category.prompt1 %>" width="68" height="68"></canvas>
							<p><%= resource.venue_category.prompt1.upcase %></p>
							<div class="score-percentage"></div>
						</div>
					</span>
					<span>	
						<canvas id="graph<%= resource.venue_category.prompt2 %>" width="68" height="68"></canvas>
						<p><%= resource.venue_category.prompt2.upcase %></p>
						<div class="score-percentage"></div>
					</span>
					<span>
						<canvas id="graph<%= resource.venue_category.prompt3 %>" width="68" height="68"></canvas>
						<p><%= resource.venue_category.prompt3.upcase %></p>
						<div class="score-percentage"></div>
					</span>
					<span>
						<div class="right-offset">
							<canvas id="graph<%= resource.venue_category.prompt4 %>" width="68" height="68"></canvas>
							<p><%= resource.venue_category.prompt4.upcase %></p>
							<div class="score-percentage"></div>
						</div>
					</span>
				</div><!-- End venue score section -->
			</div><!-- End Venue right rail header -->


			<!-- Comment box container -->
			<div class="commentbox-container">
				<div class="avatar circletag"></div>
				<div class="text-bubble"></div>
				<%= form_for Tip.create, url: venue_tips_path(resource), remote: true do |f| %>
  				<%= f.text_area :text, id: "tip-input", onkeyup: "charCounter(this)", class: "text-bubble", rows: "2", max: "20",placeholder: "Add a tip. What's good to know about #{resource.name.titlecase}?" %>
				  <%= f.submit "SUBMIT YOUR TIP", class: "btn-submit-tip" %>
				<% end %> 
				<div class="rem-char">
					<strong id="rem-char">100</strong> characters remaining
				</div>
			</div><!-- End comment box container -->


			<!-- Tip header section containing sort view and tip count -->
			<div class="tips-header">
				<h4><%= pluralize(resource.tips.count, "Tip") %></h4>
				<div class="toggle-sort">
					<div class="sort-popular-btn">POPULAR</div>
					<div class="sort-recent-btn">RECENT</div>
				</div>
			</div><!-- End tip header section -->
		
		<% anyTips = resource.tips.any? ? true : false %>
		<div class="all-tips-container <% if !anyTips %> gray-line-pattern<% end %>" style=<% if anyTips %>"min-height: 0;"<%end %>>
		<% if resource.tips.any? %>
		  <% resource.tips.by_recent.each do |t| %>
		    <%= render :partial => "tip", :locals => { :t => t } %>
	    <% end %>
	  </div>
			<div class="show-more-tips-container">
				<a class="show-more-tips-btn" href="#">SHOW MORE TIPS</a>
			</div>
		<% else %>
			<div class="center-absolute">
		  	
		  	<div class='cs-logo'></div>
		  	<div class="add-msg">Be the first to add a Tip!</div>

		  </div>
		<% end %>	
  	</div><!-- End of right rail -->
  </div><!-- End floating body container div -->
	


  <!-- Other Nearby Restaurants Division -->
	<% if @higher_scored_venues.any? %>
	<div class="other-nearby-restaurants-division">
		<h4>Similar Places, Higher Scores</h4>

	  <% @higher_scored_venues.each do |v| %>	
		<div class="other-nearby-restaurants-container">
			<div class="graph-container">
	 			<canvas id="otherVenueCanvas" width="54" height="54"></canvas>
		 		<div class="body">
		 			<div class="text">
						<div>	
		 					<p><%= link_to v.name.upcase, v %></p>
		 				</div>
		 			</div>
	 			</div>
	 			<div id="otherVenueCanvasScore" class="other-venue-graph-score"></div>
			</div>
				<p class="pull-left"><%= v.venue_subcategory.name %></p>
				<p class="pull-right distance" data-lat="#{v.latitude}" data-long="#{v.longitude}"></p>
		</div>
	  <% end %>

		

	<% end %>
	</div><!-- End of other Nearby Restaurant Division -->
	<div class="footer"></div>

  <div class='full-screen-modal' id="score-modal">
    <div class='modal-mask'>
      <div class='modal-content'>
        <div class='close-modal'>+</div>
        <p href="#">Sign into Crowdscore!</p>

        <%= form_for resource.venue_scores.build, url: venue_score_path(resource) do |f| %>
          <%= f.label :score1, resource.venue_category.prompt1 %>
          <%= f.select :score1, (0..10).to_a, include_blank: true %>

          <%= f.label :score2, resource.venue_category.prompt2 %>
          <%= f.select :score2, (0..10).to_a, include_blank: true %>
          
          <%= f.label :score3, resource.venue_category.prompt3 %>
          <%= f.select :score3, (0..10).to_a, include_blank: true %>
          
          <%= f.label :score4, resource.venue_category.prompt4 %>
          <%= f.select :score4, (0..10).to_a, include_blank: true %>
          
          <%= f.submit "Add my score" %>
        <% end %>
      </div>
    </div>
  </div>


  <div id="image-upload-modal" class='full-screen-modal'>
    <div class='modal-mask'>
      <div class='modal-content'>
        <div class='close-modal' onclick="closeModal()">+</div>
        <%= form_for VenueImage.create, url: venue_images_path(resource) do |f| %>
          <%= f.file_field :image_file %>
          <%= f.text_field :caption %>
          <%= f.submit "Upload" %>
        <% end %>
      </div>
    </div>
  </div>



<script>  
function GraphAnimation (canvas, innerColor, outterColor, percent, zeroDegree, thickness, innerWhite)
{

	this.innerWhite = innerWhite;
	this.ctx = canvas;
	this.canvas = canvas.getContext('2d');
	this.outterColor = outterColor;
	this.innerColor = innerColor;
	this.intervalID;
	this.thickness = thickness;
	this.startAngle = zeroDegree;
	this.endAngle = zeroDegree;
	this.speed = 10; // speed * 100 = total time in ms
	this.xCenter = canvas.width / 2;
	this.yCenter = canvas.height / 2;
	this.radius = this.xCenter - this.thickness / 2;
	this.zeroDegree = zeroDegree;

	this.percent = percent;
}

GraphAnimation.prototype.drawFullCircle = function (){
	// Draw the solid circle 
  this.canvas.beginPath();
  this.canvas.arc(this.xCenter, this.yCenter, this.radius, 0, Math.PI*2, false);
  this.canvas.lineWidth = this.thickness;
  this.canvas.strokeStyle = this.innerColor;
  this.canvas.stroke(); 

  if (this.innerWhite == true){
	  this.canvas.arc(this.xCenter, this.yCenter, this.radius, 0, Math.PI*2, false);
	  this.canvas.lineWidth = 0;
	  this.canvas.fillStyle ='#f7f7f7';
	  this.canvas.fill();
	  this.canvas.stroke();
	}
};

GraphAnimation.prototype.drawPartialCircle = function() {
  var self = this;
  function updateInterval() {
    self.updateShape();
  }
  this.intervalID = window.setInterval(updateInterval, this.speed);
}

GraphAnimation.prototype.stopTimer = function() {
  if (this.intervalID != null) window.clearInterval(this.intervalID)
  this.intervalID = null;
}

GraphAnimation.prototype.updateShape = function() {
	if ( this.endAngle < ( 2*Math.PI*this.percent/100 + this.zeroDegree )){
		// Draw a piece of the circle on each existing canvas
		this.canvas.beginPath();
		this.canvas.arc(this.xCenter, this.yCenter, this.radius, this.startAngle, this.endAngle, false);
		this.canvas.lineWidth = this.thickness;
		this.canvas.strokeStyle = this.outterColor;
		this.canvas.stroke();
		this.startAngle = this.endAngle - Math.PI/(4*180);
		this.endAngle = this.endAngle + (2 * Math.PI/100);
	}
	else {
		this.stopTimer();
	}
}

var count = 1;
GraphAnimation.prototype.drawLoading = function(){
	if ( count < 10 ){

		this.canvas.beginPath();
	  this.canvas.arc(this.xCenter, this.yCenter, this.radius, 0, Math.PI*2, false);
	  this.canvas.lineWidth = this.thickness;
	  this.canvas.strokeStyle = this.innerColor;
	  this.canvas.stroke(); 
	  
		// Draw a piece of the circle on each existing canvas
		this.canvas.beginPath();
		this.canvas.arc(this.xCenter, this.yCenter, this.radius, this.startAngle, this.startAngle + Math.PI/2, false);
		this.canvas.lineWidth = this.thickness;
		this.canvas.strokeStyle = this.outterColor;
		this.canvas.stroke();
		this.startAngle = this.startAngle + Math.PI/180;
	}
	else {
		this.stopTimer();
	}
}

GraphAnimation.prototype.drawArc = function() {
  var self = this;
  function draw() {
    self.drawLoading();
  }
  this.intervalID = window.setInterval(draw, this.speed)
}

</script>
	
	<script>
    	
    	// Overall Score Container score.
    	var overallVenueScore = "<%= resource.score %>";

    	//Venue Score Categories at the top of the page
			var venueScoreCategories = ["<%= resource.score_breakdown1 %>", 
																	"<%= resource.score_breakdown2 %>", 
																	"<%= resource.score_breakdown3 %>", 
																	"<%= resource.score_breakdown4 %>"]; 

			for ( var i = 0; i < venueScoreCategories.length; i++){
				if ( venueScoreCategories[i].match("N/A") )
					venueScoreCategories[i] = 0;
			}
			
			// Other venue scores at the bottom of the page
			var otherVenueScores = [90, 80, 70, 60]; 

    	var overallScoreGraph = document.getElementById("overallScoreCanvas");
    	

    	if (overallVenueScore.match('No')){
    		var white = false
    		var ringColor = '#f4f4f4';
    	} else {
    		var white = true;
    		var ringColor = "#78E1FF";
    	}
    	var overallScoreAnimation = 
    		new GraphAnimation(overallScoreGraph, ringColor, "#00B5E9", 
    											 overallVenueScore, Math.PI*3/2, 13, white);

			overallScoreAnimation.drawFullCircle();
			overallScoreAnimation.drawPartialCircle();
			
			var circleColors = ["#78E1FF", "#00B5E9"];	
		

    	var graphs = new Array;
    	var otherGraphs = new Array;
    	var identifier = "graph";
    	
    	var index = 0;
    	var arr = document.getElementsByTagName('canvas');
    	for ( var i = 0; i < arr.length; i++ ) {
    		if ( arr[i].id.indexOf( identifier ) !== -1 ){
    			graphs.push(new GraphAnimation(arr[i], circleColors[0], circleColors[1], venueScoreCategories[index], Math.PI*3/2, 5, true));

    			arr[i].parentNode.childNodes[5].innerHTML = venueScoreCategories[index];
    			index++;
    		}
    	}
    	
    	index = 0;
    	for ( var i = 0; i < arr.length; i++ ) {
    		if ( arr[i].id.indexOf( 'other' ) !== -1 ){
    			otherGraphs.push(new GraphAnimation(arr[i], circleColors[0], circleColors[1], otherVenueScores[index], Math.PI*3/2, 4, true));
    			arr[i].parentNode.childNodes[5].innerHTML = otherVenueScores[index];
    			index++;
    		}
    	}

    	graphs.forEach(draw);
    	otherGraphs.forEach(draw);
      function draw (elem, index, arr) {
	      elem.drawFullCircle();
	      elem.drawPartialCircle();
      }		      
      
    
    	function openImageUploader(){
    		$( '#image-upload-modal' ).addClass("visible");
    	}

    	function closeModal(){
    		$('#image-upload-modal').removeClass('visible');
    	}


    </script>
